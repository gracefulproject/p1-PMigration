#-------------------------------------------------------------------------------
#
#	SpiNNaker Software Tools - Release Notes
#
#-------------------------------------------------------------------------------

Version 1.34 - Added fixed-route packet handling

Routines to deal with fixed route packets added to SARK and spin1_api.
SARK gets two routines to set and get the fixed routing register in
the router

	void rtr_fr_set (uint route);   // Sets route (using virtual cores)
	uint rtr_fr_get (void);		// Gets route (actually a copy of)

spin1_api gets two new events FR_PACKET_RECEIVED, FRPL_PACKET_RECEIVED
and adds a routine to send a FR packet (which has similar args to the
MC packet send routine).

	uint spin1_send_fr_packet (uint key, uint data, uint load);

#-------------------------------------------------------------------------------

Version 1.33 - Writes to VIC are unbuffered

A bug which was caused by the ARM968 cores buffering writes to the VIC
has been fixed by forcing all writes to the VIC to be unbuffered. This
will slow applications very slightly.

#-------------------------------------------------------------------------------

Version 1.33 - Reverse IPTags

A new type of IPTag is available which is used to receive UDP packets
and forward them to a specific core on a specific SpiNNaker chip. Three
parameters are needed to set this up

Port number   the UDP port in incoming packets
P2P address   of the destination chip. A 16 bit value.
Core port     on the destination chip. An 8 bit value with core number
     	      in the lower 5 bits and "port" number in the upper 3. The
	      port should not normally be zero

When a UDP packet is received, the IPTag table is searched to see if
a reverse IPTag exists for the given port number. If it does and the
UDP payload is small enough to fit in an SDP packet, then an SDP packet
containing the UDP payload is sent to the specified chip and core. The
IPTag table is also updated with the reply information (IP address and
port) so that replies from the SpiNNaker core using the same IPTag will
be routed back to the original sender.

#-------------------------------------------------------------------------------

Version 1.33 - "ybug" Changes

The syntax of the "iptag" command has been changed to be slightly more
logical and expandable. This is incompatible with earlier syntax so
scripts will need to be changed.

#-------------------------------------------------------------------------------

Version 1.32 - SDP non-routing flag

If bit 5 of the flag byte of an SDP packet is set, then the packet is
not routed via P2P but goes to a local core. This is useful to talk to
an Ethernet-connected chip via the Ethernet interface without having
to know its point-to-point address.

#-------------------------------------------------------------------------------

Version 1.32 - SARK Router Routines

A minor change has been made to two routines for router control. The
function "rtr_mc_load" now has a fourth argument which is an AppID.
If this is non-zero it is used to set the AppID field in the router
table copy (which is primarily a debugging feature). If this field is
zero them the AppID of the core calling "rtr_mc_load" is used instead.

The function "rtr_mc_set" now has an AppID passed in as the top 8 bits
of the "route" parameter. As above, if non-zero this sets the AppID
in the router table copy, otherwise the AppID of the calling core is
used.

These changes have been made so that when a router table is loaded
from a host via SC&MP, the AppID can be correctly set by the host.

#-------------------------------------------------------------------------------

Version 1.31 - Ethernet output

To allow SpiNNaker chips in multiboard systems to send output to their
'nearest' Ethernet connected chip, some new system variables are
available. In this case 'nearest' is defined as the chip on the same
board which has an Ethernet interface. For example, all chips on the
same board as P2P address (8,4) (which has an Ethernet interface),
have a variable set to (8,4). The new variables are all shorts (16
bits) with X coordinate in the high byte and Y coordinate in the low
byte.

sv->eth_addr    P2P address of 'nearest' Ethernet chip. If you make your
		own SDP packets to send to the outside world via
		Ethernet you should set the "dest_addr" field to this
		value.

sv->dbg_addr    Initialised to be the same as "sv->eth_addr". This is
		used by "io_printf" (to IO_STD) to send printing to a
		host. You can set it (eg to (0,0)) to change the route
		that "io_printf" uses.

sv->board_addr  The address of this chip relative to the bottom
		left chip on this board (ie goes up to (7,7) on a
		48-chip board.

Note that, after booting in "ybug", the default IPTag for Tubotron output
will only be set on the root chip (0,0). IPTags for other Ethernet-attached
chips will have to be set up manually. It may be possible to automate this
in future...

#-------------------------------------------------------------------------------
